version: "3.9"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gigerlyio_api_test
    env_file:
      - ./api/.env.test
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./api:/app
      - /app/__pycache__
    networks:
      - gigerlyio_test_network

  db:
    image: postgres:16-alpine
    container_name: gigerlyio_db_test
    environment:
      POSTGRES_USER: gigerlyio_user
      POSTGRES_PASSWORD: gigerlyio_pass
      POSTGRES_DB: gigerlyio_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - pgdata_test:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - gigerlyio_test_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gigerlyio_user -d gigerlyio_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: gigerlyio_redis_test
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redisdata_test:/data
    networks:
      - gigerlyio_test_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  pgdata_test:
    driver: local
  redisdata_test:
    driver: local

networks:
  gigerlyio_test_network:
    driver: bridge