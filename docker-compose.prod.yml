# docker-compose.prod.yml
version: "3.9"

services:
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: gigerly.io_api_prod
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    env_file: 
      - ./api/.env.prod
    ports: 
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    networks:
      - gigerly.io_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: gigerly.io_web_prod
    environment:
      - NODE_ENV=production
    env_file: 
      - ./web/.env.production
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - gigerly.io_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gigerly.io_worker_prod
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    env_file: 
      - ./api/.env.prod
    depends_on:
      - db
      - redis
    command: python -m app.worker
    networks:
      - gigerly.io_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  db:
    image: postgres:16-alpine
    container_name: gigerly.io_db_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - ./db/.env.prod
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - gigerly.io_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: gigerly.io_redis_prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    env_file:
      - ./redis/.env.prod
    volumes:
      - redisdata_prod:/data
    networks:
      - gigerly.io_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: gigerly.io_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - web
    networks:
      - gigerly.io_network
    restart: unless-stopped

volumes:
  pgdata_prod:
    driver: local
  redisdata_prod:
    driver: local

networks:
  gigerly.io_network:
    driver: bridge